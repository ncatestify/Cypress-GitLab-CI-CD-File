# central-cypress-ci.yml

image: cypress/base:16

stages:
  - update_and_merge
  - test

variables:
  npm_config_cache: '$CI_PROJECT_DIR/.npm'
  CYPRESS_CACHE_FOLDER: '$CI_PROJECT_DIR/cache/Cypress'

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cache/*
    - cache/Cypress
    - node_modules
    - build

update_and_merge:
  stage: update_and_merge
  before_script:
    - apt-get update -y
    - apt-get install -y git
  script:
    - git config --global user.name "$GLOBAL_RENOVATE_USERNAME"
    - git config --global user.email "$GLOBAL_RENOVATE_EMAIL"
    - git remote set-url origin https://oauth2:${GLOBAL_RENOVATE_TOKEN}@${CI_REPOSITORY_URL#*@}
    - git fetch
    - if git rev-parse --verify update/npm-dependencies; then git checkout update/npm-dependencies && git reset --hard origin/main; else git checkout -b update/npm-dependencies; fi
    - npm update
    - npx cypress run
    - git add package-lock.json
    - git commit -m "Update npm dependencies"
    - git push --force-with-lease --set-upstream origin update/npm-dependencies
    - git checkout main
    - git merge update/npm-dependencies
    - git push origin main
  rules:
    - if: '$UPDATE_TRIGGER == "true"'
  tags:
    - docker1

test_on_main:
  stage: test
  script:
    - npm ci
    - npx cypress run --record
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "main"'
  tags:
    - docker1

test_on_other_branches:
  stage: test
  script:
    - npm ci
    - npx cypress run
  rules:
    - if: '$CI_COMMIT_BRANCH != "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  tags:
    - docker1

